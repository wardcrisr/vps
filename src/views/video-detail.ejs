<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= video.title %> - <%= title %></title>
    <!-- SEO Meta -->
    <meta name="description" content="<%= (video.description || video.title).replace(/"/g,'&quot;') %>">
    <% if (typeof canonicalUrl !== 'undefined') { %>
    <link rel="canonical" href="<%= canonicalUrl %>">
    <% } %>

    <!-- Open Graph -->
    <meta property="og:type" content="video.other">
    <meta property="og:title" content="<%= video.title.replace(/"/g,'&quot;') %>">
    <meta property="og:description" content="<%= (video.description || video.title).replace(/"/g,'&quot;') %>">
    <meta property="og:image" content="<%= video.coverUrl || video.thumbnail %>">
    <meta property="og:video" content="<%= video.playUrl || video.streamUrl %>">

    <!-- Twitter Card -->
    <meta name="twitter:card" content="player">
    <meta name="twitter:title" content="<%= video.title.replace(/"/g,'&quot;') %>">
    <meta name="twitter:description" content="<%= (video.description || video.title).replace(/"/g,'&quot;') %>">
    <meta name="twitter:image" content="<%= video.coverUrl || video.thumbnail %>">
    <meta name="twitter:player" content="<%= video.playUrl || video.streamUrl %>">
    <meta name="twitter:player:width" content="1280">
    <meta name="twitter:player:height" content="720">

    <!-- VideoObject JSON-LD -->
    <script type="application/ld+json"><%- JSON.stringify({
      "@context":"https://schema.org",
      "@type":"VideoObject",
      name: video.title,
      description: video.description || video.title,
      thumbnailUrl: video.coverUrl || video.thumbnail,
      uploadDate: new Date(video.createdAt).toISOString(),
      duration: `PT${video.duration}S`,
      embedUrl: video.playUrl || video.streamUrl,
      contentUrl: video.cdnUrl || video.url,
      author:{"@type":"Person",name:video.up.name,identifier:video.up.uid},
      genre: video.category,
      interactionStatistic:[{"@type":"InteractionCounter","interactionType":{"@type":"WatchAction"},"userInteractionCount":video.views||0},{"@type":"InteractionCounter","interactionType":{"@type":"LikeAction"},"userInteractionCount":video.likes||0}],
      isAccessibleForFree: !video.isPremiumOnly
    }) %></script>
    <link rel="stylesheet" href="https://unpkg.com/video.js/dist/video-js.css">
    <link rel="stylesheet" href="https://unpkg.com/@videojs/themes@1/dist/city/index.css">
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; }
        .video-player { background: #000; margin-bottom: 20px; }
        .video-info { background: white; padding: 20px; border-radius: 8px; }
        .video-title { font-size: 24px; font-weight: bold; margin-bottom: 10px; }
        .video-stats { color: #666; margin-bottom: 15px; }
        .video-description { line-height: 1.6; }
        .uploader-info { display: flex; align-items: center; margin: 15px 0; }
        .uploader-avatar { width: 40px; height: 40px; border-radius: 50%; background: #ddd; margin-right: 10px; }
        .related-videos { margin-top: 20px; }
        .related-title { font-size: 18px; font-weight: bold; margin-bottom: 15px; }
        .video-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 15px; }
        .video-card { background: white; border-radius: 8px; overflow: hidden; cursor: pointer; }
        .video-card:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
        .video-thumbnail { width: 100%; height: 120px; background: #ddd; display: flex; align-items: center; justify-content: center; }
        .video-card-info { padding: 10px; }
        .video-card-title { font-size: 14px; font-weight: bold; margin-bottom: 5px; }
        .video-card-stats { font-size: 12px; color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <!-- ‚òÖ Video.js Êí≠ÊîæÂô® ‚òÖ -->
        <div style="position: relative; padding-top: 56.25%;" id="playerContainer">
          <video id="videoPlayer" class="video-js vjs-theme-city" playsinline preload="auto" controls controlsList="nodownload" style="position:absolute;top:0;left:0;width:100%;height:100%;background:#000;" oncontextmenu="return false"></video>
         <!-- ÈÅÆÁΩ©Â±Ç -->
         <div id="payOverlay" style="display:none;position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.6);color:#fff;align-items:center;justify-content:center;flex-direction:column;">
            <p style="font-size:20px;margin-bottom:20px;">ËØïÁúãÂ∑≤ÁªìÊùüÔºåÊîØ‰ªòÂêéÁªßÁª≠ËßÇÁúã</p>
            <button id="buyBtn" style="padding:10px 20px;font-size:16px;cursor:pointer;background:#ff5722;border:none;color:#fff;border-radius:4px;">Á´ãÂç≥Ë¥≠‰π∞</button>
          </div>
        </div>
        <!-- ‚òÖ Êí≠ÊîæÂô®ÁªìÊùü ‚òÖ -->
        
        <div class="video-info">
            <h1 class="video-title"><%= video.title %></h1>
            <div class="video-stats">
                <span><%= video.views || 0 %> Ê¨°Êí≠Êîæ</span> ‚Ä¢
                <span><%= video.likes || 0 %> ÁÇπËµû</span> ‚Ä¢
                <span><%= video.danmakuCount || 0 %> ÂºπÂπï</span>
            </div>
            
            <div class="uploader-info">
                <% if (video.up && video.up.avatarUrl) { %>
                <img src="<%= video.up.avatarUrl %>" alt="<%= (video.up.name || video.up.displayName || video.up.username || 'Êú™Áü•Áî®Êà∑') %> ÁöÑÂ§¥ÂÉè" style="width:40px;height:40px;border-radius:50%;object-fit:cover;margin-right:10px;">
                <% } else { %>
                <div class="uploader-avatar"></div>
                <% } %>
                <div>
                    <div><strong><%= video.up ? (video.up.name || video.up.displayName || video.up.username || 'Êú™Áü•Áî®Êà∑') : 'Êú™Áü•Áî®Êà∑' %></strong></div>
                    <div style="font-size: 12px; color: #666;">UP‰∏ª</div>
                </div>
            </div>
            
            <div class="video-description">
                <%= video.description || 'ÊöÇÊó†ÊèèËø∞' %>
            </div>
        </div>
        
        <% if (relatedVideos && relatedVideos.length > 0) { %>
        <div class="related-videos">
            <h3 class="related-title">Áõ∏ÂÖ≥Êé®Ëçê</h3>
            <div class="video-grid">
                <% relatedVideos.forEach(function(relatedVideo) { %>
                <% const previewAttr = relatedVideo.previewUrl ? `data-preview="${relatedVideo.previewUrl}"` : '' %>
                <% const imgAttr = relatedVideo.previewImage ? `data-image="${relatedVideo.previewImage}"` : '' %>
                <div 
                  class="video-card" 
                  onclick="location.href='/video/<%= relatedVideo._id %>'" 
                >
                    <div class="video-thumbnail" style="position:relative;height:120px;overflow:hidden;" <%- previewAttr %> <%- imgAttr %>>
                        <% const thumb = relatedVideo.previewImage || relatedVideo.coverUrl || relatedVideo.thumbnail || '/api/placeholder/video-thumbnail'; %>
                        <img src="<%= thumb %>" alt="<%= relatedVideo.title %>" style="width:100%;height:100%;object-fit:cover;">
                    </div>
                    <div class="video-card-info">
                        <div class="video-card-title"><%= relatedVideo.title %></div>
                        <div class="video-card-stats">
                            <% if (relatedVideo.up && (relatedVideo.up.name || relatedVideo.up.displayName || relatedVideo.up.username)) { %>
                            <span>üë§ <%= relatedVideo.up.name || relatedVideo.up.displayName || relatedVideo.up.username %></span> ¬∑ 
                            <% } %>
                            <%= relatedVideo.views || 0 %> Êí≠Êîæ
                        </div>
                        <% if (relatedVideo.description) { %>
                        <div class="video-card-desc text-muted" style="font-size:12px;line-height:1.4;max-height:3.6em;overflow:hidden;display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;"><%= relatedVideo.description %></div>
                        <% } %>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>
        <% } %>
        
        <div style="margin-top: 30px; text-align: center;">
            <a href="/" style="color: #1890ff; text-decoration: none;">‚Üê ËøîÂõûÈ¶ñÈ°µ</a>
        </div>
    </div>
    <!-- Video.js & Êèí‰ª∂ -->
    <script src="https://unpkg.com/video.js/dist/video.js"></script>
    <!-- ‰ΩøÁî® jsDelivr CDNÔºåÈÅøÂÖç unpkg Ë¢´ÈòªÊñ≠ -->
    <script src="https://cdn.jsdelivr.net/npm/videojs-contrib-dash@1/dist/videojs-dash.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/videojs-sprite-thumbnails@latest/dist/videojs-sprite-thumbnails.min.js"></script>

    <!-- Áõ∏ÂÖ≥ËßÜÈ¢ëÊï∞ÊçÆ -->
    <script id="related-videos-data" type="application/json">
      <%- JSON.stringify(relatedVideos || []) %>
    </script>

    <!-- È°µÈù¢ÈÖçÁΩÆÊï∞ÊçÆÔºåÈÅøÂÖçÂú®JS‰∏≠Áõ¥Êé•ÂÜôEJSÔºåÂáèÂ∞ëËØ≠Ê≥ïÂÜ≤Á™Å -->
    <script id="page-config" type="application/json">
      <%- JSON.stringify({
        VIDEO_ID: video.id,
        PRICE: Number.isFinite(video.priceCoins) ? video.priceCoins : 0,
        CATEGORY: video.category,
        DEFAULT_PLAY_URL: video.playUrl ? video.playUrl : '',
        IS_LOGIN: !!user
      }) %>
    </script>

    <script>
      const PAGE_CONF = JSON.parse(document.getElementById('page-config').textContent || '{}');
      const VIDEO_ID = PAGE_CONF.VIDEO_ID;
      const PRICE    = PAGE_CONF.PRICE;
      const IS_PAID_VIDEO = (PRICE > 0) || (PAGE_CONF.CATEGORY && PAGE_CONF.CATEGORY.trim() === 'paid');
      const DEFAULT_PLAY_URL = PAGE_CONF.DEFAULT_PLAY_URL;
      const IS_LOGIN = PAGE_CONF.IS_LOGIN;
      let hasPurchase = false; // ÂêéÁ´ØÂèØÊ∏≤ÊüìÂ∑≤Ë¥≠Áä∂ÊÄÅ

      const playerEl   = document.getElementById('videoPlayer');
      const vjsPlayer  = videojs(playerEl, {
        fluid: true,
        html5:{ vhs:{ overrideNative:true }},
        controlBar:{ pictureInPictureToggle:false, downloadMenuButton:false }
      });

      // Áº©Áï•ÂõæÁ§∫‰æãÔºàÊèí‰ª∂Â≠òÂú®Êó∂ÊâçË∞ÉÁî®Ôºâ
      if (typeof vjsPlayer.spriteThumbnails === 'function') {
        try {
          vjsPlayer.spriteThumbnails({ url:'/thumbs/sprite.jpg', width:160, height:90, interval:1 });
        } catch(e) { console.warn('spriteThumbnails ÂàùÂßãÂåñÂ§±Ë¥•', e); }
      }

      const overlay  = document.getElementById('payOverlay');
      const buyBtn   = document.getElementById('buyBtn');

      const PREVIEW_SECONDS = 30;

      // ËøΩË∏™È¢ÑËßàÂ™í‰ªãÔºàvideo Êàñ iframeÔºâ
      let previewIsIframe = false;
      let previewIframe   = null;

      function showPayOverlay(){
        overlay.style.display = 'flex';
        if(previewIsIframe && previewIframe){
          // ÂÅúÊ≠¢ iframe Êí≠Êîæ
          previewIframe.remove();
          previewIframe = null;
        }else{
          vjsPlayer.pause();
        }
      }

      // ÁõëÂê¨ËØïÁúãÈôêÂà∂ÔºàVideo.jsÔºâ
      vjsPlayer.on('timeupdate', ()=>{
        if(IS_PAID_VIDEO && !hasPurchase && vjsPlayer.currentTime() >= PREVIEW_SECONDS){
          showPayOverlay();
        }
      });

      // ËØïÁúãËÆ°Êó∂Âô®
      let previewTimer = null;
      function startPreviewCountdown(){
        if(previewTimer){ clearTimeout(previewTimer); }
        if(IS_PAID_VIDEO && !hasPurchase){
          previewTimer = setTimeout(()=>{
            showPayOverlay();
          }, PREVIEW_SECONDS * 1000);
        }
      }

      // ÂΩì HTML5 ËßÜÈ¢ëÁúüÊ≠£ÂºÄÂßãÊí≠ÊîæÂêéÂÜçÂêØÂä®ËÆ°Êó∂ÔºåÈÅøÂÖçÁî®Êà∑Êú™ÁÇπÂáªÊí≠ÊîæËÆ°Êó∂ÂÖàÁªìÊùü
      vjsPlayer.on('play', ()=>{
        if(!previewIsIframe){
          startPreviewCountdown();
        }
      });

      async function getPreviewUrl(){
        const res = await fetch(`/api/video/${VIDEO_ID}/preview`);
        const j   = await res.json();
        return j.data.url;
      }

      async function getPlayUrl(){
        const res = await fetch(`/api/video/${VIDEO_ID}/play`,{
          headers:{ 'Authorization':'Bearer '+ (localStorage.authToken||'') }
        });
        if(res.status===403){
          return null; // Êú™Ë¥≠‰π∞
        }
        const j = await res.json();
        return j.data && j.data.url;
      }

      function loadSource(url){
        if(url.includes('iframe.mediadelivery.net/embed')){
          const container = document.getElementById('playerContainer');
          // ÂàõÂª∫Âπ∂ÊèíÂÖ• iframeÔºåËÄå‰∏çÊõøÊç¢Êï¥‰∏™ÂÆπÂô®Ôºå‰ª•‰øùÁïôÈÅÆÁΩ©Â±Ç
          const iframe = document.createElement('iframe');
          iframe.src = url;
          iframe.allow = 'accelerometer; gyroscope; autoplay; encrypted-media; picture-in-picture';
          iframe.allowFullscreen = true;
          iframe.style.position = 'absolute';
          iframe.style.top = '0';
          iframe.style.left = '0';
          iframe.style.width = '100%';
          iframe.style.height = '100%';
          iframe.style.border = 'none';

          // ÈöêËóèÂéüÁîü video ÂÖÉÁ¥†ÔºåÈÅøÂÖçÂêåÊó∂Êí≠Êîæ
          playerEl.style.display = 'none';

          // ÂÖàÊèíÂÖ• iframeÔºåÂÜçÊää overlay ÁΩÆ‰∫éÊúÄ‰∏äÂ±Ç
          container.appendChild(iframe);
          overlay.style.zIndex = '9999';
          container.appendChild(overlay);

          // ËÆ∞ÂΩïÁä∂ÊÄÅ
          previewIsIframe = true;
          previewIframe   = iframe;

          // ÂºÄÂßã iframe ËØïÁúãËÆ°Êó∂
          startPreviewCountdown();
          return;
        }

        const isHls = url.includes('.m3u8');
        const isDash = url.endsWith('.mpd');
        if(isDash){
          vjsPlayer.src({ src:url, type:'application/dash+xml' });
        }else if(isHls){
          vjsPlayer.src({ src:url, type:'application/x-mpegURL' });
        }else{
          vjsPlayer.src({ src:url, type:'video/mp4' });
        }
      }

      async function unlockVideo(){
        const res = await fetch(`/api/unlock/${VIDEO_ID}`,{
          method:'POST',
          headers:{
            'Authorization':'Bearer '+(localStorage.authToken||''),
            'Content-Type':'application/json'
          },
          body: JSON.stringify({ hoursValid: 72 })
        });
        const j = await res.json();
        return j.iframe; // Â≠óÊÆµÂêç‰∏∫ iframe
      }

      async function init(){
        let url;

        if(IS_PAID_VIDEO){
          url = await getPlayUrl();
          if(!url){
            url = await getPreviewUrl();
          }
        }else{
          url = DEFAULT_PLAY_URL;
        }

        loadSource(url);
        // ÂÖÉÊï∞ÊçÆÂä†ËΩΩÂêéËá™Âä®Êí≠ÊîæÈùôÈü≥
        vjsPlayer.ready(()=>{
          if(!IS_PAID_VIDEO){
            vjsPlayer.muted(true);
            vjsPlayer.play().catch(()=>{});
          }
        });
      }

      buyBtn.addEventListener('click', async ()=>{
        if(!IS_LOGIN){ alert('ËØ∑ÂÖàÁôªÂΩï'); return; }
        try{
          const iframeUrl = await unlockVideo();
          if(iframeUrl){
            hasPurchase = true;
            if(previewTimer){ clearTimeout(previewTimer); previewTimer = null; }
            if(previewIsIframe && previewIframe){ previewIframe.remove(); previewIframe = null; }
            overlay.style.display = 'none';

            const finalUrl = iframeUrl.includes('?') ? `${iframeUrl}&autoplay=true&muted=false&playsinline=true` : `${iframeUrl}?autoplay=true&muted=false&playsinline=true`;

            const container = document.getElementById('playerContainer');
            container.innerHTML = '';
            playerEl.style.display = 'none';
            previewIsIframe = false;
            loadSource(finalUrl);
          }else{
            alert('Ëß£ÈîÅÂ§±Ë¥•');
          }
        }catch(e){ console.error(e); alert('Ë¥≠‰π∞Â§±Ë¥•'); }
      });

      init();

      // ÂºïÂÖ•ËßÜÈ¢ëÈ¢ÑËßàÂ§ÑÁêÜËÑöÊú¨ - Áõ¥Êé•Â§çÂà∂‰∏ªÈ°µÁöÑÈÄªËæë
      document.addEventListener('DOMContentLoaded', () => {
        // È¶ñÂÖà‰∏∫Áõ∏ÂÖ≥Êé®ËçêËßÜÈ¢ëÂç°ÁâáËÆæÁΩÆ__data__Â±ûÊÄß
        const relatedVideosData = JSON.parse(document.getElementById('related-videos-data').textContent || '[]');
        const videoCards = document.querySelectorAll('.video-card');
        videoCards.forEach((card, index) => {
          if (relatedVideosData[index]) {
            card.__data__ = relatedVideosData[index];
          }
        });

        function applyPreviewAnimation(){
          document.querySelectorAll('.video-card').forEach(card => {
            const videoData = card.__data__ || {};
            const img = card.querySelector('.video-thumbnail img');
            if(!img) return;

            const thumbDiv = card.querySelector('.video-thumbnail');
            let p = thumbDiv?.dataset.preview || (videoData && videoData.previewUrl) || '';
            const imgFallback = thumbDiv?.dataset.image || (videoData && videoData.previewImage) || '';
            if(!p) return;

            if(/\.(mp4|webm)$/i.test(p)){
              const v = document.createElement('video');
              v.muted = true;
              v.loop = true;
              v.autoplay = true;
              v.playsInline = true;
              v.setAttribute('playsinline','');
              v.setAttribute('webkit-playsinline','');
              v.setAttribute('muted','');
              v.style.width = '100%';
              v.style.height = '100%';
              v.style.objectFit = 'cover';
              v.style.background = 'transparent';

              // Â∞ùËØï webm ‰∏é mp4 ÂèåÊ∫ê
              const source1 = document.createElement('source');
              source1.src = p;
              source1.type = p.endsWith('.webm') ? 'video/webm' : 'video/mp4';
              const alt = p.endsWith('.webm') ? p.replace('.webm','.mp4') : p.replace('.mp4','.webm');
              const source2 = document.createElement('source');
              source2.src = alt;
              source2.type = alt.endsWith('.webm') ? 'video/webm' : 'video/mp4';
              v.appendChild(source1);
              v.appendChild(source2);
              v.src = p; // ËÆæÁΩÆÈ¶ñÈÄâÊ∫êÔºåSafari ÈúÄË¶Å

              // Âá∫ÈîôÊó∂ÂõûÈÄÄÂà∞ÂõæÁâá
              v.onerror = ()=>{ if(imgFallback){ img.src = imgFallback; }
              };

              img.replaceWith(v);
            }else{
              img.src = p;
            }
          });
        }

        applyPreviewAnimation();
      });
    </script>
</body>
</html>