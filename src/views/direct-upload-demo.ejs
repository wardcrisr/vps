<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>浏览器直传演示 - <%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Microsoft YaHei', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .container {
            max-width: 800px;
            width: 90%;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            padding: 30px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #333;
            margin-bottom: 10px;
        }
        
        .header p {
            color: #666;
            font-size: 14px;
        }
        
        .upload-section {
            border: 2px dashed #ddd;
            border-radius: 10px;
            padding: 40px;
            text-align: center;
            margin-bottom: 30px;
            transition: all 0.3s ease;
        }
        
        .upload-section:hover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.05);
        }
        
        .upload-section.dragover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.1);
        }
        
        .file-input {
            display: none;
        }
        
        .upload-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .upload-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .upload-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .progress-section {
            display: none;
            margin-top: 20px;
        }
        
        .progress-bar {
            width: 100%;
            height: 20px;
            background: #f0f0f0;
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 15px;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            width: 0%;
            transition: width 0.3s ease;
        }
        
        .progress-info {
            display: flex;
            justify-content: space-between;
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
        }
        
        .upload-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        
        .control-btn {
            padding: 8px 20px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .control-btn:hover {
            background: #f5f5f5;
        }
        
        .control-btn.primary {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }
        
        .control-btn.danger {
            background: #ff6b6b;
            color: white;
            border-color: #ff6b6b;
        }
        
        .logs-section {
            margin-top: 30px;
        }
        
        .logs-title {
            font-size: 18px;
            color: #333;
            margin-bottom: 15px;
        }
        
        .logs-container {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            max-height: 200px;
            overflow-y: auto;
            font-family: 'Consolas', 'Monaco', monospace;
            font-size: 12px;
            line-height: 1.4;
        }
        
        .log-item {
            margin-bottom: 5px;
            padding: 2px 0;
        }
        
        .log-success {
            color: #28a745;
        }
        
        .log-error {
            color: #dc3545;
        }
        
        .log-info {
            color: #17a2b8;
        }
        
        .log-warning {
            color: #ffc107;
        }
        
        .result-section {
            display: none;
            margin-top: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .result-title {
            font-size: 18px;
            color: #333;
            margin-bottom: 15px;
        }
        
        .result-item {
            margin-bottom: 10px;
            font-size: 14px;
        }
        
        .result-label {
            font-weight: bold;
            color: #555;
        }
        
        .result-value {
            color: #333;
            word-break: break-all;
        }
        
        .download-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin-top: 10px;
        }
        
        .download-btn:hover {
            background: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🚀 浏览器直传B2演示</h1>
            <p>支持20MB分片上传，断点续传，数据包完全不经过后端API，避免413错误</p>
        </div>
        
        <div class="upload-section" id="uploadSection">
            <div class="upload-area">
                <p style="margin-bottom: 20px; color: #666; font-size: 16px;">
                    📁 拖拽文件到此处或点击选择文件
                </p>
                <p style="margin-bottom: 20px; color: #999; font-size: 14px;">
                    支持图片（最大100MB）和视频（最大2GB）
                </p>
                <input type="file" id="fileInput" class="file-input" accept="image/*,video/*">
                <button class="upload-btn" id="uploadBtn">选择文件</button>
            </div>
            
            <div class="progress-section" id="progressSection">
                <div class="progress-info">
                    <span id="progressText">准备上传...</span>
                    <span id="progressPercent">0%</span>
                </div>
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                <div class="upload-controls">
                    <button class="control-btn" id="pauseBtn">暂停</button>
                    <button class="control-btn" id="resumeBtn" style="display: none;">继续</button>
                    <button class="control-btn danger" id="cancelBtn">取消</button>
                </div>
            </div>
        </div>
        
        <div class="logs-section">
            <h3 class="logs-title">📋 上传日志</h3>
            <div class="logs-container" id="logsContainer"></div>
        </div>
        
        <div class="result-section" id="resultSection">
            <h3 class="result-title">✅ 上传结果</h3>
            <div id="resultContent"></div>
        </div>
    </div>

    <!-- 加载直传库 -->
    <script src="/js/direct-upload.js"></script>
    
    <script>
        // 页面元素
        const uploadSection = document.getElementById('uploadSection');
        const fileInput = document.getElementById('fileInput');
        const uploadBtn = document.getElementById('uploadBtn');
        const progressSection = document.getElementById('progressSection');
        const progressText = document.getElementById('progressText');
        const progressPercent = document.getElementById('progressPercent');
        const progressFill = document.getElementById('progressFill');
        const pauseBtn = document.getElementById('pauseBtn');
        const resumeBtn = document.getElementById('resumeBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const logsContainer = document.getElementById('logsContainer');
        const resultSection = document.getElementById('resultSection');
        const resultContent = document.getElementById('resultContent');
        
        // 当前上传实例
        let currentUploader = null;
        
        // 添加日志
        function addLog(message, type = 'info') {
            const logItem = document.createElement('div');
            logItem.className = `log-item log-${type}`;
            logItem.textContent = `[${new Date().toLocaleTimeString()}] ${message}`;
            logsContainer.appendChild(logItem);
            logsContainer.scrollTop = logsContainer.scrollHeight;
        }
        
        // 重置界面
        function resetUI() {
            progressSection.style.display = 'none';
            resultSection.style.display = 'none';
            uploadBtn.disabled = false;
            uploadBtn.textContent = '选择文件';
            progressFill.style.width = '0%';
            progressText.textContent = '准备上传...';
            progressPercent.textContent = '0%';
            pauseBtn.style.display = 'inline-block';
            resumeBtn.style.display = 'none';
        }
        
        // 创建直传上传器
        function createUploader() {
            return new DirectUploader({
                baseUrl: '/api/direct-upload',
                chunkSize: 10 * 1024 * 1024, // 10MB (降低分片大小提高稳定性)
                concurrency: 2, // 降低并发数提高稳定性
                
                onProgress: (progress) => {
                    progressFill.style.width = progress.percent + '%';
                    progressPercent.textContent = progress.percent + '%';
                    progressText.textContent = `上传中... (${progress.current}/${progress.total} 分片)`;
                    addLog(`进度更新: ${progress.percent}% (${progress.current}/${progress.total})`);
                },
                
                onSuccess: (result) => {
                    addLog('🎉 上传成功!', 'success');
                    progressText.textContent = '上传完成!';
                    showResult(result);
                    setTimeout(resetUI, 2000);
                },
                
                onError: (error) => {
                    addLog('❌ 上传失败: ' + error.message, 'error');
                    progressText.textContent = '上传失败';
                    setTimeout(resetUI, 2000);
                },
                
                onChunkSuccess: (result, current, total) => {
                    addLog(`✅ 分片 ${current}/${total} 上传成功`, 'success');
                },
                
                onChunkError: (error, partNumber, total) => {
                    addLog(`❌ 分片 ${partNumber} 上传失败: ${error.message}`, 'error');
                }
            });
        }
        
        // 显示上传结果
        function showResult(result) {
            if (!result.success) return;
            
            const file = result.file;
            resultContent.innerHTML = `
                <div class="result-item">
                    <span class="result-label">文件名:</span>
                    <span class="result-value">${file.originalName}</span>
                </div>
                <div class="result-item">
                    <span class="result-label">文件大小:</span>
                    <span class="result-value">${(file.size / 1024 / 1024).toFixed(2)} MB</span>
                </div>
                <div class="result-item">
                    <span class="result-label">文件类型:</span>
                    <span class="result-value">${file.mimetype}</span>
                </div>
                <div class="result-item">
                    <span class="result-label">云端文件名:</span>
                    <span class="result-value">${file.cloudFileName}</span>
                </div>
                <div class="result-item">
                    <span class="result-label">CDN地址:</span>
                    <span class="result-value">${file.cdnUrl || file.url}</span>
                </div>
                <button class="download-btn" onclick="testDownload('${file.cloudFileName}')">
                    测试下载链接
                </button>
            `;
            resultSection.style.display = 'block';
        }
        
        // 测试下载链接
        async function testDownload(fileName) {
            try {
                addLog('📥 获取下载链接...', 'info');
                const uploader = createUploader();
                const result = await uploader.getDownloadUrl(fileName);
                
                if (result.success) {
                    addLog('✅ 下载链接生成成功，有效期2小时', 'success');
                    window.open(result.downloadUrl, '_blank');
                } else {
                    addLog('❌ 下载链接生成失败: ' + result.message, 'error');
                }
            } catch (error) {
                addLog('❌ 下载链接生成异常: ' + error.message, 'error');
            }
        }
        
        // 开始上传
        async function startUpload(file) {
            try {
                uploadBtn.disabled = true;
                uploadBtn.textContent = '上传中...';
                progressSection.style.display = 'block';
                
                addLog(`🚀 开始上传: ${file.name} (${(file.size/1024/1024).toFixed(2)}MB)`, 'info');
                
                currentUploader = createUploader();
                await currentUploader.upload(file);
                
            } catch (error) {
                console.error('上传异常:', error);
            } finally {
                currentUploader = null;
            }
        }
        
        // 事件监听
        uploadBtn.addEventListener('click', () => {
            fileInput.click();
        });
        
        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                startUpload(file);
            }
        });
        
        pauseBtn.addEventListener('click', () => {
            if (currentUploader) {
                currentUploader.pause();
                pauseBtn.style.display = 'none';
                resumeBtn.style.display = 'inline-block';
                addLog('⏸️ 上传已暂停', 'warning');
            }
        });
        
        resumeBtn.addEventListener('click', () => {
            if (currentUploader) {
                currentUploader.resume();
                resumeBtn.style.display = 'none';
                pauseBtn.style.display = 'inline-block';
                addLog('▶️ 上传已恢复', 'info');
            }
        });
        
        cancelBtn.addEventListener('click', async () => {
            if (currentUploader) {
                await currentUploader.cancel();
                addLog('❌ 上传已取消', 'warning');
                resetUI();
            }
        });
        
        // 拖拽上传
        uploadSection.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadSection.classList.add('dragover');
        });
        
        uploadSection.addEventListener('dragleave', () => {
            uploadSection.classList.remove('dragover');
        });
        
        uploadSection.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadSection.classList.remove('dragover');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                startUpload(files[0]);
            }
        });
        
        // 初始化
        addLog('🎯 直传上传器已初始化', 'success');
        addLog('💡 支持拖拽上传、断点续传、并发分片', 'info');
        addLog('🔧 分片大小: 20MB, 并发数: 3', 'info');
    </script>
</body>
</html> 